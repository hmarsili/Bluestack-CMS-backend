package org.opencms.ocee.base;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import org.opencms.workplace.tools.CmsIdentifiableObjectContainer;

public class CmsStatisticalCounterCollection {
   private CmsIdentifiableObjectContainer o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super = new CmsIdentifiableObjectContainer(true, true);
   private CmsIdentifiableObjectContainer Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new = new CmsIdentifiableObjectContainer(true, true);

   public void addAll(List<I_CmsStatisticalCounter> counters) {
      Iterator it = counters.iterator();

      while(it.hasNext()) {
         this.addCounter((I_CmsStatisticalCounter)it.next());
      }

   }

   public void addCounter(I_CmsStatisticalCounter counter) {
      this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.addIdentifiableObject(counter.getName(), counter, counter.getPosition());
      if (this.Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new.getObject(counter.getGroup()) == null) {
         this.Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new.addIdentifiableObject(counter.getGroup(), counter.getGroup(), counter.getPosition());
      }

   }

   public I_CmsStatisticalCounter getCounter(String name) {
      return (I_CmsStatisticalCounter)this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.getObject(name);
   }

   public List<I_CmsStatisticalCounter> getCounters() {
      return this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.elementList();
   }

   public List<I_CmsStatisticalCounter> getCountersForGroup(String groupName) {
      List retValue = new ArrayList();
      Iterator itCounters = this.getCounters().iterator();

      while(itCounters.hasNext()) {
         I_CmsStatisticalCounter counter = (I_CmsStatisticalCounter)itCounters.next();
         if (counter.getGroup().equals(groupName)) {
            retValue.add(counter);
         }
      }

      return retValue;
   }

   public List<String> getGroups() {
      return this.Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new.elementList();
   }

   public String toString() {
      return this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.elementList().toString();
   }
}
