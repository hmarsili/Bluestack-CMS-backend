package org.opencms.ocee.replication;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Iterator;
import java.util.Map;
import org.apache.commons.logging.Log;
import org.opencms.db.CmsDriverManager;
import org.opencms.file.CmsObject;
import org.opencms.i18n.CmsMessageContainer;
import org.opencms.main.CmsLog;
import org.opencms.report.I_CmsReport;

public abstract class A_CmsReplicationHandler implements I_CmsReplicationHandler {
   private static final Log Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new = CmsLog.getLog(A_CmsReplicationHandler.class);
   private CmsObject ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000null;
   private CmsReplicationConfiguration Ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000String;
   private CmsDriverManager Ö000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000return;
   private boolean o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super;
   private long Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object;
   private CmsReplicationStatistics Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class;
   private String Ø000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000void;

   public CmsReplicationConfiguration getConfiguration() {
      return this.Ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000String;
   }

   public CmsDriverManager getDriverManager() {
      return this.Ö000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000return;
   }

   public CmsReplicationStatistics getStatistics() {
      return this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class;
   }

   public void initialize(CmsObject cms, CmsReplicationConfiguration configuration, CmsDriverManager driverManager) {
      if (!this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super) {
         this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super = true;
         this.ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000null = cms;
         this.Ö000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000return = driverManager;
         this.Ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000String = configuration;
      }
   }

   public boolean isInitialized() {
      return this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super;
   }

   public void setStatistics(CmsReplicationStatistics statistics) {
      this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class = statistics;
   }

   protected final void deleteDbTables(I_CmsReport report, String[] dbTables, CmsReplicationServer server) throws CmsReplicationException {
      Connection conn = null;
      Statement stmt = null;
      boolean var16 = false;

      CmsMessageContainer message;
      try {
         var16 = true;
         report.print(org.opencms.report.Messages.get().container("RPT_SUCCESSION_1", server.getName()), 3);
         report.print(Messages.get().container("RPT_DEL_DB_TABLES_0"), 3);
         report.print(org.opencms.report.Messages.get().container("RPT_ARGUMENT_1", dbTables[0]));
         report.print(org.opencms.report.Messages.get().container("RPT_DOTS_0"));
         String poolUrl = "jdbc:apache:commons:dbcp:" + server.getDestServerPoolUrl();
         conn = DriverManager.getConnection(poolUrl);
         stmt = conn.createStatement();
         int j = 1;

         while(true) {
            if (j >= dbTables.length) {
               stmt.executeBatch();
               report.println(org.opencms.report.Messages.get().container("RPT_OK_0"), 4);
               var16 = false;
               break;
            }

            String query = "DELETE FROM " + dbTables[j];
            stmt.addBatch(query);
            ++j;
         }
      } catch (SQLException var19) {
         message = Messages.get().container("ERR_REPLICATION_CLEAR_DB_TABLES_1", server.getName());
         Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new.error(message.key(), var19);
         throw new CmsReplicationException(message, var19);
      } finally {
         if (var16) {
            try {
               if (conn != null && !conn.isClosed()) {
                  conn.close();
               }

               if (stmt != null) {
                  stmt.close();
               }
            } catch (Exception var18) {
               message = Messages.get().container("ERR_REPLICATION_CLOSE_JDBC_CONN_1", server.getName());
               Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new.error(message.key(), var18);
               throw new CmsReplicationException(message, var18);
            }

         }
      }

      try {
         if (conn != null && !conn.isClosed()) {
            conn.close();
         }

         if (stmt != null) {
            stmt.close();
         }

      } catch (Exception var17) {
         message = Messages.get().container("ERR_REPLICATION_CLOSE_JDBC_CONN_1", server.getName());
         Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new.error(message.key(), var17);
         throw new CmsReplicationException(message, var17);
      }
   }

   protected CmsObject getCms() {
      return this.ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000null;
   }

   protected void initStats(CmsObject cms) {
      this.Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object = System.currentTimeMillis();
      this.Ø000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000void = cms.getRequestContext().currentUser().getFullName();
   }

   protected void setStatistics(Map details) {
      long duration = System.currentTimeMillis() - this.Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object;
      CmsReplicationStatistics stats = new CmsReplicationStatistics(this.Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object, duration, this.Ø000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000void);
      Iterator itKeys = details.keySet().iterator();

      while(itKeys.hasNext()) {
         String key = itKeys.next().toString();
         String value = details.get(key).toString();
         stats.setDetail(key, value);
      }

      this.setStatistics(stats);
   }
}
