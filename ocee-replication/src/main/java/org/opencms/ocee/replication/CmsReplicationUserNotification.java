package org.opencms.ocee.replication;

import java.util.Iterator;
import java.util.List;
import org.opencms.file.CmsObject;
import org.opencms.file.CmsUser;
import org.opencms.main.CmsException;
import org.opencms.notification.A_CmsNotification;
import org.opencms.report.I_CmsReport;

public class CmsReplicationUserNotification extends A_CmsNotification {
   public static final String NOTIFICATION_CONTENT = "/system/workplace/admin/notification/replication-user-notification";
   private I_CmsReport o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super;

   public CmsReplicationUserNotification(CmsObject cms, CmsUser receiver, I_CmsReport report) {
      super(cms, receiver);
      this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super = report;
   }

   protected String generateHtmlMsg() {
      StringBuffer buffer = new StringBuffer();
      if (this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.hasWarning()) {
         buffer.append("<b>");
         buffer.append(Messages.get().getBundle().key("GUI_REPLICATION_USER_WARNING_HEADER_0"));
         buffer.append("</b><br/>\n");
         this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super(buffer, this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.getWarnings());
         buffer.append("<br/>\n");
      }

      if (this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.hasError()) {
         buffer.append("<b>");
         buffer.append(Messages.get().getBundle().key("GUI_REPLICATION_USER_ERROR_HEADER_0"));
         buffer.append("</b><br/>\n");
         this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super(buffer, this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.getErrors());
         buffer.append("<br/>\n");
      }

      return buffer.toString();
   }

   protected String getNotificationContent() {
      return "/system/workplace/admin/notification/replication-user-notification";
   }

   private void o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super(StringBuffer buffer, List<Object> list) {
      Iterator i$ = list.iterator();

      while(i$.hasNext()) {
         Object o = i$.next();
         if (o instanceof Throwable) {
            Throwable t = (Throwable)o;
            String buf = CmsException.getStackTraceAsString(t);
            buf = buf.replaceAll("\\n", "<br />");
            buffer.append(buf);
         } else {
            buffer.append(o.toString() + "<br/>\n");
         }
      }

   }
}
