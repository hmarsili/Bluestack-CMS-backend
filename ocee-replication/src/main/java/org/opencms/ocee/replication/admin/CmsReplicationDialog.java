package org.opencms.ocee.replication.admin;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.jsp.PageContext;
import org.opencms.jsp.CmsJspActionElement;
import org.opencms.ocee.replication.CmsReplicationManager;
import org.opencms.ocee.replication.CmsReplicationParameters;
import org.opencms.ocee.replication.CmsReplicationServer;
import org.opencms.ocee.replication.I_CmsReplicationHandler;
import org.opencms.util.CmsFileUtil;
import org.opencms.util.CmsStringUtil;
import org.opencms.util.CmsUUID;
import org.opencms.widgets.CmsMultiSelectWidget;
import org.opencms.widgets.CmsSelectWidget;
import org.opencms.widgets.CmsSelectWidgetOption;
import org.opencms.widgets.CmsVfsFileWidget;
import org.opencms.workplace.CmsWidgetDialog;
import org.opencms.workplace.CmsWidgetDialogParameter;
import org.opencms.workplace.CmsWorkplaceSettings;
import org.opencms.workplace.tools.CmsToolManager;

public class CmsReplicationDialog extends CmsWidgetDialog {
   public static final String PARAM_SERVERID = "serverid";
   private static final String Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object = "replication";
   private static final String Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new = "view";
   private static final String[] o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super = new String[]{"page1"};
   private CmsReplicationParameters Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class;
   private String Ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000String;

   public CmsReplicationDialog(CmsJspActionElement jsp) {
      super(jsp);
   }

   public CmsReplicationDialog(PageContext context, HttpServletRequest req, HttpServletResponse res) {
      this(new CmsJspActionElement(context, req, res));
   }

   public void actionCommit() {
      List errors = new ArrayList();
      String storedSiteRoot = this.getCms().getRequestContext().getSiteRoot();

      try {
         this.getCms().getRequestContext().setSiteRoot("/");
         CmsFileUtil.checkResources(this.getCms(), this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class.getResources());
      } catch (Exception var9) {
         errors.add(var9);
      } finally {
         this.getCms().getRequestContext().setSiteRoot(storedSiteRoot);
      }

      if (errors.isEmpty()) {
         try {
            Map params = new HashMap();
            params.put("style", "new");
            params.put("action", "initial");
            if (this.Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object()) {
               CmsReplicationServer server = CmsReplicationManager.getInstance().getConfiguration().getReplicationServer(new CmsUUID(this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class.getServers()));
               params.put("server", server.getServerId());
               params.put("servertitle", server.getDisplayName());
               if (CmsStringUtil.isEmptyOrWhitespaceOnly(this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class.getResource())) {
                  params.put("resourcename", "/");
               } else {
                  params.put("resourcename", this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class.getResource());
               }

               this.getToolManager().jspForwardTool(this, "/ocee-replication/view-server/result", new HashMap(params));
            } else {
               params.put("handlers", this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class.getHandlers());
               params.put("servers", this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class.getServers());
               if (this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class.getResources() != null && !this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class.getResources().isEmpty()) {
                  params.put("resources", this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class.getResourceNames());
               } else {
                  params.put("resources", "/");
               }

               params.put("closelink", CmsToolManager.linkForToolPath(this.getJsp(), this.getCurrentToolPath()));
               this.getToolManager().jspForwardPage(this, "/system/workplace/admin/ocee-replication/full-report.jsp", new HashMap(params));
            }
         } catch (Exception var11) {
            errors.add(var11);
         }
      }

      this.setCommitErrors(errors);
   }

   public String getParamServerid() {
      return this.Ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000String;
   }

   public void setParamServerid(String paramServerId) {
      this.Ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000String = paramServerId;
   }

   protected String createDialogHtml(String dialog) {
      StringBuffer result = new StringBuffer(1024);
      result.append(this.createWidgetTableStart());
      result.append(this.createWidgetErrorHeader());
      if (dialog.equals(o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super[0])) {
         if (this.Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object()) {
            result.append(this.createWidgetBlockStart(this.key("GUI_VIEW_SERVER_PARAMS_SELECTION_0")));
            result.append(this.createDialogRowsHtml(0, 1));
            result.append(this.createWidgetBlockEnd());
         } else {
            result.append(this.createWidgetBlockStart(this.key("GUI_REPLICATION_HOW_SELECTION_0")));
            result.append(this.createDialogRowsHtml(0, 1));
            result.append(this.createWidgetBlockEnd());
            result.append(this.createWidgetBlockStart(this.key("GUI_REPLICATION_WHAT_SELECTION_0")));
            result.append(this.createDialogRowsHtml(2, 2));
            result.append(this.createWidgetBlockEnd());
         }
      }

      result.append(this.createWidgetTableEnd());
      return result.toString();
   }

   protected void defineWidgets() {
      this.Ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000String();
      if (this.Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object()) {
         this.setKeyPrefix("view");
      }

      if (this.Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object()) {
         this.addWidget(new CmsWidgetDialogParameter(this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class, "servers", o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super[0], new CmsSelectWidget(this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super())));
         this.addWidget(new CmsWidgetDialogParameter(this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class, "resource", o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super[0], new CmsVfsFileWidget(false, "")));
      } else {
         this.addWidget(new CmsWidgetDialogParameter(this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class, "servers", o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super[0], new CmsSelectWidget(this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super())));
         this.addWidget(new CmsWidgetDialogParameter(this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class, "handlers", o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super[0], new CmsMultiSelectWidget(this.Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new(), true)));
         this.addWidget(new CmsWidgetDialogParameter(this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class, "resources", o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super[0], new CmsVfsFileWidget(false, "")));
      }

   }

   protected String[] getPageArray() {
      return o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super;
   }

   protected void initMessages() {
      this.addMessages(Messages.get().getBundleName());
      super.initMessages();
   }

   protected void initWorkplaceRequestValues(CmsWorkplaceSettings settings, HttpServletRequest request) {
      this.setParamDialogtype("replication");
      super.initWorkplaceRequestValues(settings, request);
      this.setDialogObject(this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class);
   }

   private List Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new() {
      ArrayList retVal = new ArrayList();

      try {
         Iterator itHandlers = CmsReplicationManager.getInstance().getConfiguration().getReplicationHandlers().iterator();

         while(itHandlers.hasNext()) {
            I_CmsReplicationHandler handler = (I_CmsReplicationHandler)itHandlers.next();
            retVal.add(new CmsSelectWidgetOption(handler.getClass().getName(), false, handler.getName().key(this.getLocale()), handler.getHelpText().key(this.getLocale())));
         }
      } catch (Exception var4) {
      }

      return retVal;
   }

   private List o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super() {
      ArrayList retVal = new ArrayList();

      try {
         List servers = new ArrayList(CmsReplicationManager.getInstance().getConfiguration().getReplicationServersAsList());
         Collections.sort(servers);

         CmsReplicationServer server;
         boolean selected;
         for(Iterator itServers = servers.iterator(); itServers.hasNext(); retVal.add(new CmsSelectWidgetOption(server.getServerId().toString(), selected, server.getDisplayName()))) {
            server = (CmsReplicationServer)itServers.next();
            selected = false;
            if (server.getServerId().toString().equals(this.Ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000String)) {
               selected = true;
            }
         }
      } catch (Exception var6) {
      }

      return retVal;
   }

   private void Ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000String() {
      Object o;
      if (!CmsStringUtil.isEmpty(this.getParamAction()) && !"initial".equals(this.getParamAction())) {
         o = this.getDialogObject();
      } else {
         o = null;
      }

      if (!(o instanceof CmsReplicationParameters)) {
         this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class = new CmsReplicationParameters();
      } else {
         this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class = (CmsReplicationParameters)o;
      }

      if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(this.Ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000String)) {
         this.Õ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000class.setServers(this.Ô000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000String);
      }

   }

   private boolean Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object() {
      return this.getCurrentToolPath().equals("/ocee-replication/view-server");
   }
}
