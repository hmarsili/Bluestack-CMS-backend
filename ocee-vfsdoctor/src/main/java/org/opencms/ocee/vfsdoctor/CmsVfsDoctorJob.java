package org.opencms.ocee.vfsdoctor;

import java.util.Iterator;
import java.util.Map;
import org.apache.commons.logging.Log;
import org.opencms.file.CmsObject;
import org.opencms.file.CmsUser;
import org.opencms.mail.CmsSimpleMail;
import org.opencms.main.CmsLog;
import org.opencms.report.CmsStringBufferReport;
import org.opencms.report.I_CmsReport;
import org.opencms.scheduler.I_CmsScheduledJob;
import org.opencms.util.CmsStringUtil;

public class CmsVfsDoctorJob implements I_CmsScheduledJob {
   public static final String MODE_RECOVER = "recover";
   public static final String MODE_VALIDATE = "validate";
   public static final String PARAM_MODE = "mode";
   public static final String PARAM_USER = "mail-to-user";
   private static final Log o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super = CmsLog.getLog(CmsVfsDoctorJob.class);

   public String launch(CmsObject cms, Map parameters) throws Exception {
      CmsVfsDoctorManager doctorManager = CmsVfsDoctorManager.getInstance();
      CmsVfsDoctorPluginManager pluginManager = doctorManager.getPluginManager();
      CmsStringBufferReport report = new CmsStringBufferReport(cms.getRequestContext().getLocale());
      String modeParam = (String)parameters.get("mode");
      CmsVfsDoctorPluginExeMode mode;
      if ("validate".equals(modeParam)) {
         mode = CmsVfsDoctorPluginExeMode.VALIDATE;
      } else if ("recover".equals(modeParam)) {
         mode = CmsVfsDoctorPluginExeMode.RECOVER;
      } else if (modeParam == null) {
         if (o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.isDebugEnabled()) {
            o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.debug(Messages.get().getBundle().key("LOG_JOB_USE_DEFAULT_MODE_0"));
         }

         mode = CmsVfsDoctorPluginExeMode.VALIDATE;
      } else {
         if (o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.isErrorEnabled()) {
            o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.error(Messages.get().getBundle().key("ERR_JOB_INVALID_MODE_1", modeParam));
         }

         mode = CmsVfsDoctorPluginExeMode.VALIDATE;
      }

      int failures = 0;

      I_CmsVfsDoctorPlugin plugin;
      try {
         for(Iterator iter = pluginManager.getPlugins().iterator(); iter.hasNext(); failures += plugin.execute(mode, report)) {
            plugin = (I_CmsVfsDoctorPlugin)iter.next();
            plugin.setCms(cms);
         }
      } catch (Exception var11) {
         report.println(var11);
         this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super(cms, (String)parameters.get("mail-to-user"), report);
         throw var11;
      }

      this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super(cms, (String)parameters.get("mail-to-user"), report);
      return Messages.get().getBundle().key("LOG_JOB_EXECUTION_FINISH_1", new Integer(failures));
   }

   private void o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super(CmsObject cms, String username, I_CmsReport report) {
      try {
         CmsUser user = cms.readUser(username);
         if (CmsStringUtil.isEmpty(user.getEmail())) {
            if (o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.isErrorEnabled()) {
               o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.error(Messages.get().getBundle().key("ERR_JOB_NO_MAIL_ADDRESS_1", user.getName()));
            }

            return;
         }

         StringBuffer msg = new StringBuffer();
         msg.append(report.toString());
         CmsSimpleMail mail = new CmsSimpleMail();
         mail.addTo(user.getEmail());
         mail.setSubject(Messages.get().getBundle().key("GUI_JOB_MAIL_SUBJECT_0"));
         mail.setMsg(msg.toString());
         mail.send();
         if (o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.isInfoEnabled()) {
            o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.info(Messages.get().getBundle().key("LOG_JOB_SEND_MAIL_SUCCESS_1", user.getEmail()));
         }
      } catch (Exception var7) {
         if (o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.isErrorEnabled()) {
            o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.error(Messages.get().getBundle().key("ERR_JOB_SEND_MAIL_ERROR_1", username), var7);
         }
      }

   }
}
