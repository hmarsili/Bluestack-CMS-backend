package org.opencms.ocee.vfsdoctor;

import java.util.Collection;
import java.util.Iterator;
import org.apache.commons.logging.Log;
import org.opencms.main.CmsCoreProvider;
import org.opencms.main.CmsException;
import org.opencms.main.CmsLog;
import org.opencms.workplace.tools.CmsIdentifiableObjectContainer;

public class CmsVfsDoctorPluginManager {
   private static final Log Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new = CmsLog.getLog(CmsVfsDoctorPluginManager.class);
   private final CmsIdentifiableObjectContainer o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super = new CmsIdentifiableObjectContainer(true, false);

   public void configPlugins() throws CmsException {
      Iterator it = this.getPlugins().iterator();

      while(it.hasNext()) {
         I_CmsVfsDoctorPlugin plugin = (I_CmsVfsDoctorPlugin)it.next();

         try {
            plugin.configure(CmsCoreProvider.getInstance().getDbName(), CmsVfsDoctorManager.getInstance().getPoolUrl());
         } catch (NullPointerException var4) {
            if (Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new.isDebugEnabled()) {
               Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new.debug(Messages.get().getBundle().key("ERR_CONFIG_PLUGIN_1", new Object[]{plugin.getName()}), var4);
            }
         }
      }

   }

   public I_CmsVfsDoctorPlugin getPlugin(Class plugin) {
      return (I_CmsVfsDoctorPlugin)this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.getObject(plugin.getName());
   }

   public I_CmsVfsDoctorPlugin getPlugin(String classname) {
      return (I_CmsVfsDoctorPlugin)this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.getObject(classname);
   }

   public Collection getPlugins() {
      return this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.elementList();
   }

   public void registerPlugin(String className) {
      try {
         this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.addIdentifiableObject(className, Class.forName(className).newInstance());
         if (CmsLog.INIT.isInfoEnabled()) {
            CmsLog.INIT.info(Messages.get().getBundle().key("INIT_PLUGIN_REGISTERED_1", new Object[]{className}));
         }
      } catch (Exception var3) {
         if (CmsLog.INIT.isErrorEnabled()) {
            CmsLog.INIT.error(Messages.get().getBundle().key("INIT_PLUGIN_INIT_ERROR_1", new Object[]{className}));
         }
      }

   }

   void o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super() {
      this.o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.clear();
   }
}
