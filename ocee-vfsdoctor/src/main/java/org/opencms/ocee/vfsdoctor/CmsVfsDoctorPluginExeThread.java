package org.opencms.ocee.vfsdoctor;

import java.util.Iterator;
import java.util.List;
import java.util.Map;
import org.apache.commons.logging.Log;
import org.opencms.file.CmsObject;
import org.opencms.i18n.CmsMessageContainer;
import org.opencms.main.CmsLog;
import org.opencms.main.OpenCms;
import org.opencms.report.A_CmsReportThread;

public class CmsVfsDoctorPluginExeThread extends A_CmsReportThread {
   private static final Log o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super = CmsLog.getLog(CmsVfsDoctorPluginExeThread.class);
   private CmsVfsDoctorPluginExeMode Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object;
   private List Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new;

   public CmsVfsDoctorPluginExeThread(CmsObject cms, List pluginNames, CmsVfsDoctorPluginExeMode mode) {
      super(cms, "OpenCms: VFS doctor");
      this.Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new = pluginNames;
      this.Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object = mode;
      this.initHtmlReport(cms.getRequestContext().getLocale());
   }

   public String getReportUpdate() {
      return this.getReport().getReportUpdate();
   }

   public synchronized void run() {
      try {
         CmsMessageContainer message = Messages.get().container("RPT_VFS_DOCTOR_BEGIN_0");
         this.getReport().println(message, 2);
         if (o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.isInfoEnabled()) {
            o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.info(message.key());
         }

         I_CmsVfsDoctorPlugin plugin;
         for(Iterator it = this.Ò000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000new.iterator(); it.hasNext(); plugin.execute(this.Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object, this.getReport())) {
            OpenCms.fireCmsEvent(5, (Map)null);
            plugin = CmsVfsDoctorManager.getInstance().getPluginManager().getPlugin(it.next().toString());
            plugin.setCms(this.getCms());
            String mode = Messages.get().getBundle(this.getReport().getLocale()).key("GUI_OCEE_VFSDOC_" + this.Ó000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Object.toString().toUpperCase() + "_MODE_NAME_0");
            message = Messages.get().container("RPT_EXEC_PLUGIN_2", plugin.getNiceName().key(this.getReport().getLocale()), mode);
            this.getReport().println(message, 2);
            if (o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.isInfoEnabled()) {
               o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.info(message.key());
            }
         }

         message = Messages.get().container("RPT_VFS_DOCTOR_END_0");
         this.getReport().println(message, 2);
         if (o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.isInfoEnabled()) {
            o000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000super.info(message.key());
         }
      } catch (Throwable var5) {
         this.getReport().println(var5);
      }

      OpenCms.fireCmsEvent(5, (Map)null);
   }
}
